


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       *************************
    2 00000000         ;*
    3 00000000         ;* Copyright (c) 2020 Tinychip Microelectronics Co.,Ltd
    4 00000000         ;* All rights reserved.
    5 00000000         ;*
    6 00000000         ;    Redistribution and use in source and binary forms, 
                       with or without modification, 
    7 00000000         ;are permitted provided that the following conditions ar
                       e met:
    8 00000000         ;
    9 00000000         ;    1. Redistributions of source code must retain the a
                       bove copyright notice, this 
   10 00000000         ;       list of conditions and the following disclaimer.
                       
   11 00000000         ;    2. Redistributions in binary form must reproduce th
                       e above copyright notice, 
   12 00000000         ;       this list of conditions and the following discla
                       imer in the documentation 
   13 00000000         ;       and/or other materials provided with the distrib
                       ution.
   14 00000000         ;    3. Neither the name of the copyright holder nor the
                        names of its contributors 
   15 00000000         ;       may be used to endorse or promote products deriv
                       ed from this software without 
   16 00000000         ;       specific prior written permission.
   17 00000000         ;
   18 00000000         ;    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS 
                       AND CONTRIBUTORS "AS IS" 
   19 00000000         ;AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT N
                       OT LIMITED TO, THE IMPLIED 
   20 00000000         ;WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICU
                       LAR PURPOSE ARE DISCLAIMED. 
   21 00000000         ;IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS 
                       BE LIABLE FOR ANY DIRECT, 
   22 00000000         ;INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENT
                       IAL DAMAGES (INCLUDING, BUT 
   23 00000000         ;NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERV
                       ICES; LOSS OF USE, DATA, OR 
   24 00000000         ;PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND O
                       N ANY THEORY OF LIABILITY, 
   25 00000000         ;WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDI
                       NG NEGLIGENCE OR OTHERWISE) 
   26 00000000         ;ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVE
                       N IF ADVISED OF THE POSSIBILITY 
   27 00000000         ;OF SUCH DAMAGE.
   28 00000000         ;*******************************************************
                       ************************
   29 00000000         ;
   30 00000000         
   31 00000000         ; Amount of memory (in bytes) allocated for Stack
   32 00000000         ; Tailor this value to your application needs
   33 00000000         ; <h> Stack Configuration
   34 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   35 00000000         ; </h>
   36 00000000         
   37 00000000 00000400 
                       Stack_Size
                               EQU              0x400



ARM Macro Assembler    Page 2 


   38 00000000         
   39 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   40 00000000         Stack_Mem
                               SPACE            Stack_Size
   41 00000400         __initial_sp
   42 00000400         
   43 00000400         
   44 00000400         ; <h> Heap Configuration
   45 00000400         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   46 00000400         ; </h>
   47 00000400         
   48 00000400 00000000 
                       Heap_Size
                               EQU              0x0
   49 00000400         
   50 00000400                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   51 00000000         __heap_base
   52 00000000         Heap_Mem
                               SPACE            Heap_Size
   53 00000000         __heap_limit
   54 00000000         
   55 00000000                 PRESERVE8
   56 00000000                 THUMB
   57 00000000         
   58 00000000         
   59 00000000         ; Vector Table Mapped to Address 0 at Reset
   60 00000000                 AREA             RESET, DATA, READONLY
   61 00000000                 EXPORT           __Vectors
   62 00000000                 EXPORT           __Vectors_End
   63 00000000                 EXPORT           __Vectors_Size
   64 00000000         
   65 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   66 00000004 00000000        DCD              Reset_Handler ; Reset
   67 00000008 00000000        DCD              NMI_Handler ; NMI
   68 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault
   69 00000010 00000000        DCD              0           ; Reserved
   70 00000014 00000000        DCD              0           ; Reserved
   71 00000018 00000000        DCD              0           ; Reserved
   72 0000001C 00000000        DCD              0           ; Reserved
   73 00000020 00000000        DCD              0           ; Reserved
   74 00000024 00000000        DCD              0           ; Reserved
   75 00000028 00000000        DCD              0           ; Reserved
   76 0000002C 00000000        DCD              SVC_Handler ; SVCall
   77 00000030 00000000        DCD              0           ; Reserved
   78 00000034 00000000        DCD              0           ; Reserved
   79 00000038 00000000        DCD              PendSV_Handler ; PendSV
   80 0000003C 00000000        DCD              SysTick_Handler ; SysTick
   81 00000040         ; External Interrupts
   82 00000040 00000000        DCD              fic_IRQHandler ; fic
   83 00000044 00000000        DCD              lic_IRQHandler ; lic
   84 00000048 00000000        DCD              aic_IRQHandler ; aic
   85 0000004C         ;
   86 0000004C         
   87 0000004C         __Vectors_End
   88 0000004C         



ARM Macro Assembler    Page 3 


   89 0000004C 0000004C 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
   90 0000004C         
   91 0000004C                 AREA             |.text|, CODE, READONLY
   92 00000000         
   93 00000000         ; Reset handler routine
   94 00000000         Reset_Handler
                               PROC
   95 00000000                 EXPORT           Reset_Handler                 [
WEAK]
   96 00000000                 IMPORT           TCmain
   97 00000000                 IMPORT           SystemInit
   98 00000000                 IMPORT           |Image$$RW_IRAM1$$ZI$$Base|
   99 00000000                 IMPORT           |Image$$RW_IRAM1$$ZI$$Limit|
  100 00000000         
  101 00000000 480B            LDR              R0, =0x10ff0008
  102 00000002 490C            LDR              R1, =0x00000000
  103 00000004 6001            STR              R1, [R0]
  104 00000006         ;stack space zero init
  105 00000006 2000            MOVS             R0, #0
  106 00000008 490B            LDR              R1, =|Image$$RW_IRAM1$$ZI$$Base
|
  107 0000000A 4A0C            LDR              R2, =|Image$$RW_IRAM1$$ZI$$Limi
t|
  108 0000000C         FillZero
  109 0000000C 6008            STR              R0, [R1, #0]
  110 0000000E 1D09            ADDS             R1, R1, #4
  111 00000010 4291            CMP              R1, R2
  112 00000012 D3FB            BCC              FillZero
  113 00000014 480A            LDR              R0, =SystemInit
  114 00000016 4780            BLX              R0
  115 00000018 480A            LDR              R0, =TCmain
  116 0000001A 4700            BX               R0
  117 0000001C                 ENDP
  118 0000001C         
  119 0000001C         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  120 0000001C         
  121 0000001C         NMI_Handler
                               PROC
  122 0000001C                 EXPORT           NMI_Handler                    
[WEAK]
  123 0000001C E7FE            B                .
  124 0000001E                 ENDP
  126 0000001E         HardFault_Handler
                               PROC
  127 0000001E                 EXPORT           HardFault_Handler              
[WEAK]
  128 0000001E E7FE            B                .
  129 00000020                 ENDP
  130 00000020         SVC_Handler
                               PROC
  131 00000020                 EXPORT           SVC_Handler                    
[WEAK]
  132 00000020 E7FE            B                .
  133 00000022                 ENDP
  134 00000022         PendSV_Handler
                               PROC



ARM Macro Assembler    Page 4 


  135 00000022                 EXPORT           PendSV_Handler                 
[WEAK]
  136 00000022 E7FE            B                .
  137 00000024                 ENDP
  138 00000024         SysTick_Handler
                               PROC
  139 00000024                 EXPORT           SysTick_Handler                
[WEAK]
  140 00000024 E7FE            B                .
  141 00000026                 ENDP
  142 00000026         fic_IRQHandler
                               PROC
  143 00000026                 EXPORT           fic_IRQHandler                [
WEAK]
  144 00000026 E7FE            B                .
  145 00000028                 ENDP
  146 00000028         lic_IRQHandler
                               PROC
  147 00000028                 EXPORT           lic_IRQHandler                [
WEAK]
  148 00000028 E7FE            B                .
  149 0000002A                 ENDP
  150 0000002A         aic_IRQHandler
                               PROC
  151 0000002A                 EXPORT           aic_IRQHandler                [
WEAK]
  152 0000002A E7FE            B                .
  153 0000002C                 ENDP
  154 0000002C         Default_Handler
                               PROC
  155 0000002C E7FE            B                .
  156 0000002E                 ENDP
  157 0000002E         
  158 0000002E 00 00           ALIGN
  159 00000030         
  160 00000030         ;*******************************************************
                       ************************
  161 00000030         ; User Stack and Heap initialization
  162 00000030         ;*******************************************************
                       ************************
  163 00000030                 IF               :DEF:__MICROLIB
  164 00000030         
  165 00000030                 EXPORT           __initial_sp
  166 00000030                 EXPORT           __heap_base
  167 00000030                 EXPORT           __heap_limit
  168 00000030         
  169 00000030                 ELSE
  184                          ENDIF
  185 00000030         
  186 00000030                 END
              10FF0008 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\objects\startup_tcasxxx.d -o.\objects\startup_tcasxxx.o -I.\RTE\
_Oximeter_example -IC:\Users\longten\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CM



ARM Macro Assembler    Page 5 


SIS\Core\Include -IC:\Users\longten\AppData\Local\Arm\Packs\Keil\TCASxxx\1.1.6\
Device\Include --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION S
ETA 529" --predefine="_RTE_ SETA 1" --list=.\listings\startup_tcasxxx.lst ..\co
mmon\src\startup_tcasxxx.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 39 in file ..\common\src\startup_tcasxxx.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 40 in file ..\common\src\startup_tcasxxx.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 41 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 65 in file ..\common\src\startup_tcasxxx.s
      At line 165 in file ..\common\src\startup_tcasxxx.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 50 in file ..\common\src\startup_tcasxxx.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 52 in file ..\common\src\startup_tcasxxx.s
   Uses
      None
Comment: Heap_Mem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 51 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 166 in file ..\common\src\startup_tcasxxx.s
Comment: __heap_base used once
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 53 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 167 in file ..\common\src\startup_tcasxxx.s
Comment: __heap_limit used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 60 in file ..\common\src\startup_tcasxxx.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 65 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 61 in file ..\common\src\startup_tcasxxx.s
      At line 89 in file ..\common\src\startup_tcasxxx.s

__Vectors_End 0000004C

Symbol: __Vectors_End
   Definitions
      At line 87 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 62 in file ..\common\src\startup_tcasxxx.s
      At line 89 in file ..\common\src\startup_tcasxxx.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 91 in file ..\common\src\startup_tcasxxx.s
   Uses
      None
Comment: .text unused
Default_Handler 0000002C

Symbol: Default_Handler
   Definitions
      At line 154 in file ..\common\src\startup_tcasxxx.s
   Uses
      None
Comment: Default_Handler unused
FillZero 0000000C

Symbol: FillZero
   Definitions
      At line 108 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 112 in file ..\common\src\startup_tcasxxx.s
Comment: FillZero used once
HardFault_Handler 0000001E

Symbol: HardFault_Handler
   Definitions
      At line 126 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 68 in file ..\common\src\startup_tcasxxx.s
      At line 127 in file ..\common\src\startup_tcasxxx.s

NMI_Handler 0000001C

Symbol: NMI_Handler
   Definitions
      At line 121 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 67 in file ..\common\src\startup_tcasxxx.s
      At line 122 in file ..\common\src\startup_tcasxxx.s

PendSV_Handler 00000022

Symbol: PendSV_Handler
   Definitions
      At line 134 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 79 in file ..\common\src\startup_tcasxxx.s
      At line 135 in file ..\common\src\startup_tcasxxx.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 94 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 66 in file ..\common\src\startup_tcasxxx.s
      At line 95 in file ..\common\src\startup_tcasxxx.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


SVC_Handler 00000020

Symbol: SVC_Handler
   Definitions
      At line 130 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 76 in file ..\common\src\startup_tcasxxx.s
      At line 131 in file ..\common\src\startup_tcasxxx.s

SysTick_Handler 00000024

Symbol: SysTick_Handler
   Definitions
      At line 138 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 80 in file ..\common\src\startup_tcasxxx.s
      At line 139 in file ..\common\src\startup_tcasxxx.s

aic_IRQHandler 0000002A

Symbol: aic_IRQHandler
   Definitions
      At line 150 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 84 in file ..\common\src\startup_tcasxxx.s
      At line 151 in file ..\common\src\startup_tcasxxx.s

fic_IRQHandler 00000026

Symbol: fic_IRQHandler
   Definitions
      At line 142 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 82 in file ..\common\src\startup_tcasxxx.s
      At line 143 in file ..\common\src\startup_tcasxxx.s

lic_IRQHandler 00000028

Symbol: lic_IRQHandler
   Definitions
      At line 146 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 83 in file ..\common\src\startup_tcasxxx.s
      At line 147 in file ..\common\src\startup_tcasxxx.s

12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 48 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 52 in file ..\common\src\startup_tcasxxx.s
Comment: Heap_Size used once
Stack_Size 00000400

Symbol: Stack_Size
   Definitions
      At line 37 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 40 in file ..\common\src\startup_tcasxxx.s
Comment: Stack_Size used once
__Vectors_Size 0000004C

Symbol: __Vectors_Size
   Definitions
      At line 89 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 63 in file ..\common\src\startup_tcasxxx.s
Comment: __Vectors_Size used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Image$$RW_IRAM1$$ZI$$Base 00000000

Symbol: Image$$RW_IRAM1$$ZI$$Base
   Definitions
      At line 98 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 106 in file ..\common\src\startup_tcasxxx.s
Comment: Image$$RW_IRAM1$$ZI$$Base used once
Image$$RW_IRAM1$$ZI$$Limit 00000000

Symbol: Image$$RW_IRAM1$$ZI$$Limit
   Definitions
      At line 99 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 107 in file ..\common\src\startup_tcasxxx.s
Comment: Image$$RW_IRAM1$$ZI$$Limit used once
SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 97 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 113 in file ..\common\src\startup_tcasxxx.s
Comment: SystemInit used once
TCmain 00000000

Symbol: TCmain
   Definitions
      At line 96 in file ..\common\src\startup_tcasxxx.s
   Uses
      At line 115 in file ..\common\src\startup_tcasxxx.s
Comment: TCmain used once
4 symbols
364 symbols in table
