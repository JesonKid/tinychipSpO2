<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Oximeter_example.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Oximeter_example.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Dec 14 19:22:51 2021
<BR><P>
<H3>Maximum Stack Usage =        336 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
TCmain &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">HardFault_Handler</a><BR>
 <LI><a href="#[2]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NMI_Handler</a><BR>
 <LI><a href="#[5]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">PendSV_Handler</a><BR>
 <LI><a href="#[4]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">SVC_Handler</a><BR>
 <LI><a href="#[6]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SysTick_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3]">HardFault_Handler</a> from interrupt.o(i.HardFault_Handler) referenced from startup_tcasxxx.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from interrupt.o(i.HardFault_Handler) referenced from interrupt.o(i.IC_PowupInit)
 <LI><a href="#[2]">NMI_Handler</a> from interrupt.o(i.NMI_Handler) referenced from startup_tcasxxx.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from interrupt.o(i.NMI_Handler) referenced from interrupt.o(i.IC_PowupInit)
 <LI><a href="#[5]">PendSV_Handler</a> from interrupt.o(i.PendSV_Handler) referenced from startup_tcasxxx.o(RESET)
 <LI><a href="#[5]">PendSV_Handler</a> from interrupt.o(i.PendSV_Handler) referenced from interrupt.o(i.IC_PowupInit)
 <LI><a href="#[c]">Reset_Handler</a> from startup_tcasxxx.o(.text) referenced from startup_tcasxxx.o(RESET)
 <LI><a href="#[4]">SVC_Handler</a> from interrupt.o(i.SVC_Handler) referenced from startup_tcasxxx.o(RESET)
 <LI><a href="#[4]">SVC_Handler</a> from interrupt.o(i.SVC_Handler) referenced from interrupt.o(i.IC_PowupInit)
 <LI><a href="#[6]">SysTick_Handler</a> from interrupt.o(i.SysTick_Handler) referenced from startup_tcasxxx.o(RESET)
 <LI><a href="#[6]">SysTick_Handler</a> from interrupt.o(i.SysTick_Handler) referenced from interrupt.o(i.IC_PowupInit)
 <LI><a href="#[a]">SystemInit</a> from system_tcasxxx.o(i.SystemInit) referenced from startup_tcasxxx.o(.text)
 <LI><a href="#[b]">TCmain</a> from main.o(i.TCmain) referenced from startup_tcasxxx.o(.text)
 <LI><a href="#[9]">aic_IRQHandler</a> from interrupt.o(i.aic_IRQHandler) referenced from startup_tcasxxx.o(RESET)
 <LI><a href="#[9]">aic_IRQHandler</a> from interrupt.o(i.aic_IRQHandler) referenced from interrupt.o(i.IC_PowupInit)
 <LI><a href="#[7]">fic_IRQHandler</a> from interrupt.o(i.fic_IRQHandler) referenced from startup_tcasxxx.o(RESET)
 <LI><a href="#[7]">fic_IRQHandler</a> from interrupt.o(i.fic_IRQHandler) referenced from interrupt.o(i.IC_PowupInit)
 <LI><a href="#[8]">lic_IRQHandler</a> from interrupt.o(i.lic_IRQHandler) referenced from startup_tcasxxx.o(RESET)
 <LI><a href="#[8]">lic_IRQHandler</a> from interrupt.o(i.lic_IRQHandler) referenced from interrupt.o(i.IC_PowupInit)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[42]"></a>Flash_ConfigRCTC</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, flash.o(RAMCODE))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init (via Veneer)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemConfigFlash (via Veneer)
</UL>

<P><STRONG><a name="[40]"></a>Flash_Erase</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, flash.o(RAMCODE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErasePage (via Veneer)
</UL>

<P><STRONG><a name="[a5]"></a>Flash_Write</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, flash.o(RAMCODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Flash_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlashCfg (via Veneer)
</UL>

<P><STRONG><a name="[ab]"></a>NVR_Erase</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, flash.o(RAMCODE), UNUSED)

<P><STRONG><a name="[ac]"></a>NVR_Write</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, flash.o(RAMCODE), UNUSED)

<P><STRONG><a name="[c]"></a>Reset_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, startup_tcasxxx.o(.text))

<P><STRONG><a name="[ad]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[e]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1ms
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Version
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_AlarmThrd
</UL>

<P><STRONG><a name="[ae]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[d]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Perfusion
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_ResampleSignal
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_SpO2
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Pulse
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Pleth
</UL>

<P><STRONG><a name="[af]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BlinkSelection
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SPI0_Init
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Pleth
</UL>

<P><STRONG><a name="[b0]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_LowPassFiltFIR
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[2a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_ProbeDriveAdjust
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_FixedSmoothFilter
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_StatSampleACVariety
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BlinkSelection
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[11]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[a7]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[12]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_LowPassFiltFIR
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[15]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[16]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_LowPassFiltFIR
</UL>

<P><STRONG><a name="[17]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_FixedSmoothFilter
</UL>

<P><STRONG><a name="[19]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_FixedSmoothFilter
</UL>

<P><STRONG><a name="[1b]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_LowPassFiltFIR
</UL>

<P><STRONG><a name="[1c]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_FixedSmoothFilter
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_LowPassFiltFIR
</UL>

<P><STRONG><a name="[1d]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_d2iz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_FixedSmoothFilter
</UL>

<P><STRONG><a name="[1e]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[b5]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[14]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[13]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[1a]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[18]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[20]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[b7]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>ADT_StartTimer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timer.o(i.ADT_StartTimer))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_TIMER_PWM_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Buzz_Init
</UL>

<P><STRONG><a name="[a9]"></a>Buzz_Speaker</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, buzzdriver.o(i.Buzz_Speaker))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Buzz_Speaker
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aic_IRQHandler
</UL>

<P><STRONG><a name="[84]"></a>Cmp_CLKConfig</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, cmp.o(i.Cmp_CLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Cmp_CLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_PressKey_Init
</UL>

<P><STRONG><a name="[87]"></a>Cmp_Enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cmp.o(i.Cmp_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_PressKey_Init
</UL>

<P><STRONG><a name="[85]"></a>Cmp_Init</STRONG> (Thumb, 432 bytes, Stack size 20 bytes, cmp.o(i.Cmp_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Cmp_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_PressKey_Init
</UL>

<P><STRONG><a name="[86]"></a>Cmp_VrefConfig</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, cmp.o(i.Cmp_VrefConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Cmp_VrefConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_PressKey_Init
</UL>

<P><STRONG><a name="[8c]"></a>CopyDataRWtoImage</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, system_tcasxxx.o(i.CopyDataRWtoImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CopyDataRWtoImage
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[6b]"></a>DMA_Init</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ADC_Init
</UL>

<P><STRONG><a name="[51]"></a>DMA_StartChannel</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dma.o(i.DMA_StartChannel))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralsRxDmaConfig
</UL>

<P><STRONG><a name="[92]"></a>DelayForCommandExeDone</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, delay.o(i.DelayForCommandExeDone))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TriggerSARAdcStart
</UL>

<P><STRONG><a name="[21]"></a>Display_AlarmMenu</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, displaydriver.o(i.Display_AlarmMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Display_AlarmMenu &rArr; Display_AlarmThrd &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_AlarmThrd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[24]"></a>Display_AlarmThrd</STRONG> (Thumb, 808 bytes, Stack size 48 bytes, displaydriver.o(i.Display_AlarmThrd))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Display_AlarmThrd &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_AlarmMenu
</UL>

<P><STRONG><a name="[25]"></a>Display_Bargraph</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, displaydriver.o(i.Display_Bargraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Display_Bargraph &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_ClearRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[29]"></a>Display_BlinkSelection</STRONG> (Thumb, 338 bytes, Stack size 160 bytes, displaydriver.o(i.Display_BlinkSelection))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = Display_BlinkSelection &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_ClearRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[2d]"></a>Display_GUI</STRONG> (Thumb, 1290 bytes, Stack size 24 bytes, displaydriver.o(i.Display_GUI))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = Display_GUI &rArr; Display_BlinkSelection &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearBits
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Version
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Perfusion
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Logo
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Caption
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Ble
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Battery
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_UpdateDevice
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Display_On_Off
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Contrast_Control
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Fill_RAM
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_SpO2
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Pulse
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ProbeOff
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Pleth
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BlinkSelection
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Bargraph
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_AlarmThrd
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_AlarmMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aic_IRQHandler
</UL>

<P><STRONG><a name="[3a]"></a>Display_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, displaydriver.o(i.Display_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Display_Init &rArr; UG2864_OLED_Init &rArr; UG2864_Fill_RAM &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleDrive_Init
</UL>

<P><STRONG><a name="[33]"></a>Display_Pleth</STRONG> (Thumb, 276 bytes, Stack size 88 bytes, displaydriver.o(i.Display_Pleth))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Display_Pleth &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_ClearRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[37]"></a>Display_ProbeOff</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, displaydriver.o(i.Display_ProbeOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Display_ProbeOff &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_ClearRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[35]"></a>Display_Pulse</STRONG> (Thumb, 494 bytes, Stack size 56 bytes, displaydriver.o(i.Display_Pulse))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Display_Pulse &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_ClearRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[34]"></a>Display_SpO2</STRONG> (Thumb, 548 bytes, Stack size 56 bytes, displaydriver.o(i.Display_SpO2))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Display_SpO2 &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_ClearRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[3f]"></a>ErasePage</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, defaultsetup.o(i.ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ErasePage
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlashCfg
</UL>

<P><STRONG><a name="[a6]"></a>Flash_DeInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash.o(i.Flash_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlashCfg
</UL>

<P><STRONG><a name="[41]"></a>Flash_Init</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, flash.o(i.Flash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Flash_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ConfigRCTC (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlashCfg
</UL>

<P><STRONG><a name="[39]"></a>GPIO_ClearBits</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gpio.o(i.GPIO_ClearBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_ClearBits &rArr; GPIO_RegisterMap
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_RegisterMap
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_GPIO_Init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fic_IRQHandler
</UL>

<P><STRONG><a name="[44]"></a>GPIO_ClrAFMode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gpio.o(i.GPIO_ClrAFMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_ClrAFMode
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinMuxAdrMap
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IwdgCallback
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_GPIO_Init
</UL>

<P><STRONG><a name="[46]"></a>GPIO_Init</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_Init &rArr; GPIO_RegisterMap
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_RegisterMap
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinMuxAdrMap
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_GPIO_Init
</UL>

<P><STRONG><a name="[47]"></a>GPIO_SetAFMode</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gpio.o(i.GPIO_SetAFMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SetAFMode
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinMuxAdrMap
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_GPIO_Init
</UL>

<P><STRONG><a name="[48]"></a>GPIO_SetBits</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gpio.o(i.GPIO_SetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_SetBits &rArr; GPIO_RegisterMap
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_RegisterMap
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_GPIO_Init
</UL>

<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> interrupt.o(i.IC_PowupInit)
<LI> startup_tcasxxx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>IC_PowupInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, interrupt.o(i.IC_PowupInit))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCmain
</UL>

<P><STRONG><a name="[4b]"></a>IWDG_ClearITPending</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wdg.o(i.IWDG_ClearITPending))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IwdgCallback
</UL>

<P><STRONG><a name="[7a]"></a>IWDG_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wdg.o(i.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Interrupt_Enable
</UL>

<P><STRONG><a name="[4a]"></a>IWDG_GetITFlag</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wdg.o(i.IWDG_GetITFlag))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IwdgCallback
</UL>

<P><STRONG><a name="[49]"></a>IwdgCallback</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, systemdriver.o(i.IwdgCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IwdgCallback &rArr; GPIO_ClrAFMode
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_GetITFlag
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ClearITPending
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClrAFMode
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aic_IRQHandler
</UL>

<P><STRONG><a name="[4f]"></a>Light_AdaptBaselineSet</STRONG> (Thumb, 246 bytes, Stack size 20 bytes, lightdriver.o(i.Light_AdaptBaselineSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Light_AdaptBaselineSet
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_ProbeDriveAdjust
</UL>

<P><STRONG><a name="[4d]"></a>Light_AdjustDrive</STRONG> (Thumb, 326 bytes, Stack size 20 bytes, lightdriver.o(i.Light_AdjustDrive))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Light_AdjustDrive
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_ProbeDriveAdjust
</UL>

<P><STRONG><a name="[4c]"></a>Light_ProbeDriveAdjust</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, lightdriver.o(i.Light_ProbeDriveAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Light_ProbeDriveAdjust &rArr; Light_StatSampleACVariety
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_AdjustDrive
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_AdaptBaselineSet
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_StatSampleACVariety
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lic_IRQHandler
</UL>

<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> interrupt.o(i.IC_PowupInit)
<LI> startup_tcasxxx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>OP2_OutPadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, op.o(i.OP2_OutPadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_OPA_Init
</UL>

<P><STRONG><a name="[81]"></a>OP2_VinPadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, op.o(i.OP2_VinPadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_OPA_Init
</UL>

<P><STRONG><a name="[82]"></a>OP2_VipPadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, op.o(i.OP2_VipPadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_OPA_Init
</UL>

<P><STRONG><a name="[80]"></a>OPA_Enable</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, op.o(i.OPA_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OPA_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_OPA_Init
</UL>

<P><STRONG><a name="[7f]"></a>OPA_Init</STRONG> (Thumb, 266 bytes, Stack size 28 bytes, op.o(i.OPA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = OPA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_OPA_Init
</UL>

<P><STRONG><a name="[5]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.PendSV_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> interrupt.o(i.IC_PowupInit)
<LI> startup_tcasxxx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>PeripheralsRxDmaConfig</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, dma.o(i.PeripheralsRxDmaConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PeripheralsRxDmaConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_StartChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ADC_Init
</UL>

<P><STRONG><a name="[8f]"></a>PrintInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, trace.o(i.PrintInit))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCmain
</UL>

<P><STRONG><a name="[58]"></a>Process_SampleData</STRONG> (Thumb, 190 bytes, Stack size 64 bytes, preprocess.o(i.Process_SampleData))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Process_SampleData &rArr; Process_FixedSmoothFilter &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_ResampleSignal
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_LowPassFiltFIR
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_FixedSmoothFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lic_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>ReadFlashCfg</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, defaultsetup.o(i.ReadFlashCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ReadFlashCfg &rArr; WriteFlashCfg &rArr; Flash_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlashCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_RestoreDevice
</UL>

<P><STRONG><a name="[5b]"></a>SEGGER_RTT_Write</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, segger_rtt.o(i.SEGGER_RTT_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>

<P><STRONG><a name="[5d]"></a>SEGGER_RTT_WriteNoLock</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, segger_rtt.o(i.SEGGER_RTT_WriteNoLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAvailWriteSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[61]"></a>SEGGER_RTT_printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, segger_rtt_printf.o(i.SEGGER_RTT_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCmain
</UL>

<P><STRONG><a name="[62]"></a>SEGGER_RTT_vprintf</STRONG> (Thumb, 414 bytes, Stack size 128 bytes, segger_rtt_printf.o(i.SEGGER_RTT_vprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>

<P><STRONG><a name="[66]"></a>SPI_Init</STRONG> (Thumb, 152 bytes, Stack size 20 bytes, spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SPI_Init &rArr; SPI_SetCpolCpha
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetRfr
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetFrameSize
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetCpolCpha
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SPI0_Init
</UL>

<P><STRONG><a name="[a4]"></a>SPI_SendData_Host</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, spi.o(i.SPI_SendData_Host))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_SendData_Host
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Data
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>

<P><STRONG><a name="[69]"></a>SPI_SetCpolCpha</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, spi.o(i.SPI_SetCpolCpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_SetCpolCpha
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[68]"></a>SPI_SetFrameSize</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, spi.o(i.SPI_SetFrameSize))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[67]"></a>SPI_SetRfr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, spi.o(i.SPI_SetRfr))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[4]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.SVC_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> interrupt.o(i.IC_PowupInit)
<LI> startup_tcasxxx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>SYS_Hardware_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, systemdriver.o(i.SYS_Hardware_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SYS_Hardware_Init &rArr; SYS_GPIO_Init &rArr; GPIO_Init &rArr; GPIO_RegisterMap
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_TIMER_PWM_Init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_TIMER_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SPI0_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_PressKey_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_OPA_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_GPIO_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Buzz_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCmain
</UL>

<P><STRONG><a name="[77]"></a>SYS_Interrupt_Enable</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, systemdriver.o(i.SYS_Interrupt_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SYS_Interrupt_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCmain
</UL>

<P><STRONG><a name="[7b]"></a>SYS_ModuleDrive_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, systemdriver.o(i.SYS_ModuleDrive_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SYS_ModuleDrive_Init &rArr; Display_Init &rArr; UG2864_OLED_Init &rArr; UG2864_Fill_RAM &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_RestoreDevice
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCmain
</UL>

<P><STRONG><a name="[6e]"></a>SetTimer</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, timer.o(i.SetTimer))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_TIMER_PWM_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Buzz_Init
</UL>

<P><STRONG><a name="[7c]"></a>Setup_RestoreDevice</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, defaultsetup.o(i.Setup_RestoreDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Setup_RestoreDevice &rArr; ReadFlashCfg &rArr; WriteFlashCfg &rArr; Flash_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleDrive_Init
</UL>

<P><STRONG><a name="[2f]"></a>Setup_UpdateDevice</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, defaultsetup.o(i.Setup_UpdateDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Setup_UpdateDevice &rArr; WriteFlashCfg &rArr; Flash_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlashCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[8e]"></a>SysCheckTrimValid</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, system_tcasxxx.o(i.SysCheckTrimValid))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[6]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> interrupt.o(i.IC_PowupInit)
<LI> startup_tcasxxx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>SystemAnlogTrim</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_tcasxxx.o(i.SystemAnlogTrim))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[88]"></a>SystemConfigFlash</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_tcasxxx.o(i.SystemConfigFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemConfigFlash
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ConfigRCTC (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[89]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, system_tcasxxx.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemCoreClockUpdate &rArr; SystemGetHClkFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGetHClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[8b]"></a>SystemCoreSwitchHclkSrc</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, system_tcasxxx.o(i.SystemCoreSwitchHclkSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemCoreSwitchHclkSrc &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[8a]"></a>SystemGetHClkFreq</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, system_tcasxxx.o(i.SystemGetHClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemGetHClkFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[a]"></a>SystemInit</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, system_tcasxxx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SystemInit &rArr; SystemCoreClockUpdate &rArr; SystemGetHClkFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSwitchHclkSrc
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemConfigFlash
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAnlogTrim
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCheckTrimValid
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyDataRWtoImage
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tcasxxx.o(.text)
</UL>
<P><STRONG><a name="[b]"></a>TCmain</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, main.o(i.TCmain))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = TCmain &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1ms
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintInit
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IC_PowupInit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleDrive_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Interrupt_Enable
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Hardware_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tcasxxx.o(.text)
</UL>
<P><STRONG><a name="[7e]"></a>Tia_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tia.o(i.Tia_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_OPA_Init
</UL>

<P><STRONG><a name="[7d]"></a>Tia_Init</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, tia.o(i.Tia_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Tia_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_OPA_Init
</UL>

<P><STRONG><a name="[6c]"></a>TriggerSARAdcStart</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, saradc.o(i.TriggerSARAdcStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TriggerSARAdcStart
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayForCommandExeDone
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ADC_Init
</UL>

<P><STRONG><a name="[26]"></a>UG2864_ClearRegion</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, ug2864driver.o(i.UG2864_ClearRegion))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = UG2864_ClearRegion &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Start_Page
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Start_Column
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Perfusion
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Battery
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_SpO2
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Pulse
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ProbeOff
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Pleth
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BlinkSelection
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Bargraph
</UL>

<P><STRONG><a name="[23]"></a>UG2864_Display</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, ug2864driver.o(i.UG2864_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Start_Page
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Start_Column
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Version
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Perfusion
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Logo
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Caption
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Ble
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Battery
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_SpO2
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Pulse
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ProbeOff
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Pleth
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BlinkSelection
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Bargraph
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_AlarmThrd
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_AlarmMenu
</UL>

<P><STRONG><a name="[30]"></a>UG2864_Fill_RAM</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ug2864driver.o(i.UG2864_Fill_RAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UG2864_Fill_RAM &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Start_Page
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Start_Column
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[3b]"></a>UG2864_OLED_Init</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = UG2864_OLED_Init &rArr; UG2864_Fill_RAM &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_VCOMH
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Start_Line
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Segment_Remap
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Pump
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Precharge_Period
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Multiplex_Ratio
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Inverse_Display
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Entire_Display
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Display_Offset
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Display_Clock
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Common_Remap
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Common_Config
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Addressing_Mode
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Display_On_Off
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Contrast_Control
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Fill_RAM
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Init
</UL>

<P><STRONG><a name="[9b]"></a>UG2864_Set_Addressing_Mode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Addressing_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Addressing_Mode &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[9e]"></a>UG2864_Set_Common_Config</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Common_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Common_Config &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[9d]"></a>UG2864_Set_Common_Remap</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Common_Remap))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Common_Remap &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[2e]"></a>UG2864_Set_Contrast_Control</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Contrast_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Contrast_Control &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[96]"></a>UG2864_Set_Display_Clock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Display_Clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Display_Clock &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[98]"></a>UG2864_Set_Display_Offset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Display_Offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Display_Offset &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[38]"></a>UG2864_Set_Display_On_Off</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Display_On_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Display_On_Off &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[a1]"></a>UG2864_Set_Entire_Display</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Entire_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Entire_Display &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[a2]"></a>UG2864_Set_Inverse_Display</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Inverse_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Inverse_Display &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[97]"></a>UG2864_Set_Multiplex_Ratio</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Multiplex_Ratio))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Multiplex_Ratio &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[9f]"></a>UG2864_Set_Precharge_Period</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Precharge_Period))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Precharge_Period &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[9a]"></a>UG2864_Set_Pump</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Pump))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Pump &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[9c]"></a>UG2864_Set_Segment_Remap</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Segment_Remap))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Segment_Remap &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[94]"></a>UG2864_Set_Start_Column</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Start_Column))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Start_Column &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Fill_RAM
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_ClearRegion
</UL>

<P><STRONG><a name="[99]"></a>UG2864_Set_Start_Line</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Start_Line))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Start_Line &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[93]"></a>UG2864_Set_Start_Page</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_Start_Page))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Fill_RAM
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_ClearRegion
</UL>

<P><STRONG><a name="[a0]"></a>UG2864_Set_VCOMH</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ug2864driver.o(i.UG2864_Set_VCOMH))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UG2864_Set_VCOMH &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_OLED_Init
</UL>

<P><STRONG><a name="[5a]"></a>WriteFlashCfg</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, defaultsetup.o(i.WriteFlashCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WriteFlashCfg &rArr; Flash_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_DeInit
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write (via Veneer)
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_UpdateDevice
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashCfg
</UL>

<P><STRONG><a name="[1f]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[22]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lpm.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGetHClkFreq
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSwitchHclkSrc
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BlinkSelection
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Bargraph
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_AlarmThrd
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_AlarmMenu
</UL>

<P><STRONG><a name="[9]"></a>aic_IRQHandler</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, interrupt.o(i.aic_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = aic_IRQHandler &rArr; Display_GUI &rArr; Display_BlinkSelection &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IwdgCallback
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzz_Speaker
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 2]<UL><LI> interrupt.o(i.IC_PowupInit)
<LI> startup_tcasxxx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>delay1ms</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, delay.o(i.delay1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = delay1ms &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCmain
</UL>

<P><STRONG><a name="[7]"></a>fic_IRQHandler</STRONG> (Thumb, 516 bytes, Stack size 24 bytes, interrupt.o(i.fic_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = fic_IRQHandler &rArr; GPIO_ClearBits &rArr; GPIO_RegisterMap
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPendingIRQ
</UL>
<BR>[Address Reference Count : 2]<UL><LI> interrupt.o(i.IC_PowupInit)
<LI> startup_tcasxxx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>lic_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, interrupt.o(i.lic_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lic_IRQHandler &rArr; Process_SampleData &rArr; Process_FixedSmoothFilter &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_SampleData
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_ProbeDriveAdjust
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPendingIRQ
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 2]<UL><LI> interrupt.o(i.IC_PowupInit)
<LI> startup_tcasxxx.o(RESET)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6a]"></a>SYS_ADC_Init</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, systemdriver.o(i.SYS_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SYS_ADC_Init &rArr; PeripheralsRxDmaConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TriggerSARAdcStart
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralsRxDmaConfig
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Hardware_Init
</UL>

<P><STRONG><a name="[6d]"></a>SYS_Buzz_Init</STRONG> (Thumb, 60 bytes, Stack size 72 bytes, systemdriver.o(i.SYS_Buzz_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SYS_Buzz_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADT_StartTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Hardware_Init
</UL>

<P><STRONG><a name="[70]"></a>SYS_GPIO_Init</STRONG> (Thumb, 512 bytes, Stack size 32 bytes, systemdriver.o(i.SYS_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SYS_GPIO_Init &rArr; GPIO_Init &rArr; GPIO_RegisterMap
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetAFMode
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClrAFMode
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearBits
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Hardware_Init
</UL>

<P><STRONG><a name="[76]"></a>SYS_OPA_Init</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, systemdriver.o(i.SYS_OPA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SYS_OPA_Init &rArr; OPA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tia_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tia_Enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Enable
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OP2_VipPadConfig
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OP2_VinPadConfig
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OP2_OutPadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Hardware_Init
</UL>

<P><STRONG><a name="[75]"></a>SYS_PressKey_Init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, systemdriver.o(i.SYS_PressKey_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SYS_PressKey_Init &rArr; Cmp_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmp_VrefConfig
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmp_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmp_Enable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmp_CLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Hardware_Init
</UL>

<P><STRONG><a name="[74]"></a>SYS_SPI0_Init</STRONG> (Thumb, 34 bytes, Stack size 48 bytes, systemdriver.o(i.SYS_SPI0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SYS_SPI0_Init &rArr; SPI_Init &rArr; SPI_SetCpolCpha
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Hardware_Init
</UL>

<P><STRONG><a name="[72]"></a>SYS_TIMER_Init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, systemdriver.o(i.SYS_TIMER_Init))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Hardware_Init
</UL>

<P><STRONG><a name="[73]"></a>SYS_TIMER_PWM_Init</STRONG> (Thumb, 56 bytes, Stack size 72 bytes, systemdriver.o(i.SYS_TIMER_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SYS_TIMER_PWM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADT_StartTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Hardware_Init
</UL>

<P><STRONG><a name="[79]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, systemdriver.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Interrupt_Enable
</UL>

<P><STRONG><a name="[78]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, systemdriver.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Interrupt_Enable
</UL>

<P><STRONG><a name="[45]"></a>GPIO_PinMuxAdrMap</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, gpio.o(i.GPIO_PinMuxAdrMap))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetAFMode
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClrAFMode
</UL>

<P><STRONG><a name="[43]"></a>GPIO_RegisterMap</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gpio.o(i.GPIO_RegisterMap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_RegisterMap
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearBits
</UL>

<P><STRONG><a name="[a8]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, interrupt.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lic_IRQHandler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aic_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>__NVIC_SetPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, interrupt.o(i.__NVIC_SetPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lic_IRQHandler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fic_IRQHandler
</UL>

<P><STRONG><a name="[4e]"></a>Light_StatSampleACVariety</STRONG> (Thumb, 616 bytes, Stack size 24 bytes, lightdriver.o(i.Light_StatSampleACVariety))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Light_StatSampleACVariety
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_ProbeDriveAdjust
</UL>

<P><STRONG><a name="[52]"></a>Process_FixedSmoothFilter</STRONG> (Thumb, 280 bytes, Stack size 56 bytes, preprocess.o(i.Process_FixedSmoothFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Process_FixedSmoothFilter &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_SampleData
</UL>

<P><STRONG><a name="[53]"></a>Process_LowPassFiltFIR</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, preprocess.o(i.Process_LowPassFiltFIR))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Process_LowPassFiltFIR &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_SampleData
</UL>

<P><STRONG><a name="[57]"></a>Process_ResampleSignal</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, preprocess.o(i.Process_ResampleSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Process_ResampleSignal &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_SampleData
</UL>

<P><STRONG><a name="[27]"></a>Display_Battery</STRONG> (Thumb, 406 bytes, Stack size 48 bytes, displaydriver.o(i.Display_Battery))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Display_Battery &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_ClearRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[28]"></a>Display_Ble</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, displaydriver.o(i.Display_Ble))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Display_Ble &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[2c]"></a>Display_Caption</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, displaydriver.o(i.Display_Caption))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Display_Caption &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[32]"></a>Display_Logo</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, displaydriver.o(i.Display_Logo))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Display_Logo &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[36]"></a>Display_Perfusion</STRONG> (Thumb, 940 bytes, Stack size 88 bytes, displaydriver.o(i.Display_Perfusion))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Display_Perfusion &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_ClearRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[31]"></a>Display_Version</STRONG> (Thumb, 408 bytes, Stack size 48 bytes, displaydriver.o(i.Display_Version))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Display_Version &rArr; UG2864_Display &rArr; UG2864_Set_Start_Page &rArr; UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSoftwareVer
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHardwareVer
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GUI
</UL>

<P><STRONG><a name="[3d]"></a>GetHardwareVer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, displaydriver.o(i.GetHardwareVer))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Version
</UL>

<P><STRONG><a name="[3e]"></a>GetSoftwareVer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, displaydriver.o(i.GetSoftwareVer))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Version
</UL>

<P><STRONG><a name="[a3]"></a>UG2864_Write_Command</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ug2864driver.o(i.UG2864_Write_Command))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UG2864_Write_Command &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData_Host
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_VCOMH
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Start_Page
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Start_Line
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Start_Column
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Segment_Remap
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Pump
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Precharge_Period
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Multiplex_Ratio
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Inverse_Display
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Entire_Display
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Display_Offset
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Display_Clock
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Common_Remap
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Common_Config
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Addressing_Mode
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Display_On_Off
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Set_Contrast_Control
</UL>

<P><STRONG><a name="[95]"></a>UG2864_Write_Data</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ug2864driver.o(i.UG2864_Write_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UG2864_Write_Data &rArr; SPI_SendData_Host
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData_Host
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Fill_RAM
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_Display
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UG2864_ClearRegion
</UL>

<P><STRONG><a name="[5c]"></a>_DoInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, segger_rtt.o(i._DoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[5e]"></a>_GetAvailWriteSpace</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, segger_rtt.o(i._GetAvailWriteSpace))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[60]"></a>_WriteBlocking</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, segger_rtt.o(i._WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[5f]"></a>_WriteNoCheck</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, segger_rtt.o(i._WriteNoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[64]"></a>_PrintInt</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, segger_rtt_printf.o(i._PrintInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>

<P><STRONG><a name="[65]"></a>_PrintUnsigned</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, segger_rtt_printf.o(i._PrintUnsigned))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
</UL>

<P><STRONG><a name="[63]"></a>_StoreChar</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, segger_rtt_printf.o(i._StoreChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
